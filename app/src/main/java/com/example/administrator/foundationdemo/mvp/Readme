MVP 解释：
      View 对应于Activity，负责View的绘制以及与用户交互
      Model 依然是业务逻辑和实体模型
      Presenter 负责完成View于Model间的交互

   View <==> Presenter -> Model

小结：是因为这次的跳跃是从并不标准的MVC到MVP的一个转变，减少了Activity的职责，简化了Activity中的代码，
     将复杂的逻辑代码提取到了Presenter中进行处理。
     与之对应的好处就是，耦合度更低，更方便的进行测试。

实例如代码：